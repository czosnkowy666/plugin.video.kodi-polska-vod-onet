defaultTasks 'createBundle'

group = project.name

def version = getAddonVersion()

project.ext {
    packageName = group
    packageNameFull = packageName + '-' + version
    packageFileName = packageName + '.zip'
    localKodiAddonsLocation = ''
}

task prepBundle {
    FileTree tree = fileTree(dir: projectDir)
    tree.include '**/*.py'
    tree.include 'addon.xml'
    tree.include 'icon.png'
    tree.include '**/resources/**'
    tree.exclude '.gradle'
    tree.exclude '**/gradle'
    tree.exclude '.idea'
    tree.exclude '**/target'
    tree.exclude '**/tmp'
    tree.exclude '**/venv'

    outputs.files tree
}

task showFilelist(dependsOn: prepBundle) {
    doLast {
        println "Show files included in package"
        prepBundle.outputs.files.each {
            println "\t ${it}"
        }
    }
}

task createBundle(type: Zip, dependsOn: prepBundle, description : 'Create the zip file of the source.') {
    baseName packageNameFull
    from prepBundle.outputs.files
    exclude packageNameFull
    into packageName
    destinationDir file('target')
}

task copyTask(type: Copy, dependsOn: createBundle) {
    from packageFileName
    into localKodiAddonsLocation
    doFirst {
        println "File to copy: " + packageFileName
    }
}

task cleanBuild(type:Delete) {
    delete 'target'
    delete packageFileName
    doFirst {
        println "File to delete: " + packageFileName
    }
}

def getAddonVersion() {

    def addonXml = new File("$projectDir/addon.xml")
    def rootNode = new XmlParser().parse(addonXml)

    if (rootNode.@version) {
        return (String) rootNode.@version
    } else {
        return "0.0.1"
    }
}